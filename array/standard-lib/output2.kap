namespace("output2")

⍝ ┌┌┌→──┐
⍝ ↓↓↓0 1│
⍝ │││2 3│
⍝ ││├→──┤
⍝ ││↓4 5│
⍝ │││6 7│
⍝ │├├→──┤
⍝ │↓↓0 1│
⍝ │││2 3│
⍝ ││├→──┤
⍝ ││↓4 5│
⍝ │││6 7│
⍝ └└└───┘

isArray ⇐ 'array≡typeof
⍝isChar ⇐ 'char≡typeof
⍝
⍝∇ isAplString (v) {
⍝  if (1≢≢⍴v) { →0 }
⍝  ~0∊'char=typeof¨v
⍝}

⍝ Convert a plain 1D string to a grapheme array
stringToGraphemes ⇐ (1,≢)⍛⍴ unicode:toGraphemes

∇ foo (v) { stringToGraphemes ⍕v }

⍝ Testcase
⍝ alignCells (stringToGraphemes⍕)¨ 2 3 ⍴ 1 1234

⍝ Given a 2D array of grapheme arrays, return a new array where each cell is
⍝ right-aligned to the maximum width of all cells in each column, and top-aligned
⍝ according to the height of cells in the rows.
⍝∇ alignCells (v) {
⍝  ⍝ The width of each column is the maximum width of any cell
⍝  colWidths ← ⌈/[0] {(⍴⍵)[1]}¨v
⍝  ⍝ Pad each cell to the correct width
⍝  xAligned ← ((⍴v) ⍴ colWidths) {((↑⍴⍵) (⍺-(⍴⍵)[1]) ⍴ @\s),⍵}¨ v
⍝
⍝  ⍝ Likewise for the heights
⍝  rowHeights ← ⌈/[1] {↑⍴⍵}¨xAligned
⍝  yAligned ← (⍉ (⌽ ⍴ xAligned) ⍴ rowHeights) {⍵ ,[0] ((⍺-↑⍴⍵) ((⍴⍵)[1])) ⍴ @\s}¨ xAligned
⍝}
⍝
⍝∇ prettyPrintToChars (v) {
⍝  when {
⍝    (isChar(v))      { renderChar v }
⍝    (isAplString(v)) { renderString v }
⍝    (isArray(v))     { renderArray v }
⍝    (1)              { stringToGraphemes ⍕v }
⍝  }
⍝}
